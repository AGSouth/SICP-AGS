#lang racket
(define (count-change amount)
  (cc amount 5))

(drefine( cc amount kind-of-coins)
        (cond ((= amount 0) 1)
              ((or (< amount 0) (= kind-of-coins 0)) 0)
              (else (+ (cc (= amount (first-denomination kind-of-coins)) kind-of-coins)
                       (cc (amount (- kind-of-coins 1)))))))

(define (first-denomination kind-of-coins)
  (cond ((= kind-of-coins 1) 1)
        ((= kind-of-coins 5) 5)
        ((= kind-of-coins 10) 10)
        ((= kind-of-coins 25) 25)
        ((= kind-of-coins 50) 50) ))
